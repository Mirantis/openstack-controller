{{ if eq .Values.osdpl.namespace .Values.osdpl.settings.raw.OSCTL_REDIS_NAMESPACE }}
  {{ fail "Osdpl namespace and Redis namespace should be different!" }}
{{ end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: {{ .Release.Namespace }}
  name: openstack-controller-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: openstack-controller-role-cluster
rules:

  # NOTE(pas-ha) needed for multi-instance, including dev override
  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, get]
  - apiGroups: [zalando.org]
    resources: [clusterkopfpeerings]
    verbs: [list, get, watch, patch]

  # Watch creation and deletion of nodes with compute labels
  - apiGroups: ['']
    resources: [nodes]
    verbs: [list, get, watch, patch]

  # Application: read-only access for watching cluster-wide.
  - apiGroups: [lcm.mirantis.com]
    resources: [openstackdeployments]
    verbs: [list, get, watch]
  - apiGroups: [lcm.mirantis.com]
    resources: [openstackdeploymentstatus]
    verbs: [list, get, watch]
  - apiGroups: [lcm.mirantis.com]
    resources: [helmbundles]
    verbs: [list, get, watch]

  # Application: node maintenance related access
  - apiGroups: [lcm.mirantis.com]
    resources: [nodemaintenancerequests]
    verbs: [list, get, watch]
  - apiGroups: [lcm.mirantis.com]
    resources: [nodeworkloadlocks]
    verbs: [list, get, watch, create, update, patch, delete]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: "{{ .Values.osdpl.namespace }}"
  name: "openstack-controller-role-{{ .Values.osdpl.namespace }}"
rules:

  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [""]
    resources: [events]
    verbs: [create]
  # Application: read secret with keystone creds
  - apiGroups: [""]
    resources: [secrets]
    verbs: [list, get, watch, patch]
  # NOTE(pas-ha) needed for multi-instance, including dev override
  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [zalando.org]
    resources: [kopfpeerings]
    verbs: [list, get, watch, patch]

  # Application: manage ceph access data(secrets,configmaps)
  - apiGroups: [""]
    resources: [secrets,configmaps]
    verbs: [list, get, create]

  - apiGroups: ["batch"]
    resources: [cronjobs]
    verbs: [list, get, watch]

  - apiGroups: [""]
    resources: ["pods", "pods/exec"]
    verbs: [list, get]

  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [lcm.mirantis.com]
    resources: [openstackdeployments]
    verbs: [list, get, watch, patch]

  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [lcm.mirantis.com]
    resources: [openstackdeploymentstatus]
    verbs: [list, get, watch, patch]

  # Application: resources we produce and manipulate.
  - apiGroups: [lcm.mirantis.com]
    resources: [helmbundles]
    verbs: [list, get, watch, create, update, patch, delete]

  # Manage child resources
  - apiGroups: [extensions, apps, batch]
    resources: [deployments, statefulsets, daemonsets, jobs]
    verbs: [list, get, create, watch, patch, delete]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{ .Values.osdpl.cephSharedNamespace }}
  name: "openstack-controller-role-{{ .Values.osdpl.cephSharedNamespace }}"
rules:

  # Application: read ceph access data from shared namespace.
  - apiGroups: [""]
    resources: [secrets,configmaps]
    verbs: [list, get, create, watch, patch, update]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{ .Values.osdpl.tfSharedNamespace }}
  name: "openstack-controller-role-{{ .Values.osdpl.tfSharedNamespace }}"
rules:

  # Application: read Tungsten Fabric access data from shared namespace.
  - apiGroups: [""]
    resources: [secrets,configmaps]
    verbs: [list, get, create, patch, update]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{ .Values.osdpl.settings.raw.OSCTL_REDIS_NAMESPACE }}
  name: "openstack-controller-role-{{ .Values.osdpl.settings.raw.OSCTL_REDIS_NAMESPACE }}"
rules:

  # Application: manage redis failovers from shared namespace.
  - apiGroups: [databases.spotahome.com]
    resources: [redisfailovers]
    verbs: [list, get, create, patch, update]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: openstack-controller-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: openstack-controller-role-cluster
subjects:
  - kind: ServiceAccount
    name: openstack-controller-account
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
  name: openstack-controller-account:cluster-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: openstack-controller-account
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: "{{ .Values.osdpl.namespace }}"
  name: "openstack-controller-rolebinding-{{ .Values.osdpl.namespace }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "openstack-controller-role-{{ .Values.osdpl.namespace }}"
subjects:
  - kind: ServiceAccount
    name: openstack-controller-account
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: {{ .Values.osdpl.cephSharedNamespace }}
  name: "openstack-controller-rolebinding-{{ .Values.osdpl.cephSharedNamespace }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "openstack-controller-role-{{ .Values.osdpl.cephSharedNamespace }}"
subjects:
  - kind: ServiceAccount
    name: openstack-controller-account
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: {{ .Values.osdpl.settings.raw.OSCTL_REDIS_NAMESPACE }}
  name: "openstack-controller-rolebinding-{{ .Values.osdpl.settings.raw.OSCTL_REDIS_NAMESPACE }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "openstack-controller-role-{{ .Values.osdpl.settings.raw.OSCTL_REDIS_NAMESPACE }}"
subjects:
  - kind: ServiceAccount
    name: openstack-controller-account
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: {{ .Values.osdpl.tfSharedNamespace }}
  name: "openstack-controller-rolebinding-{{ .Values.osdpl.tfSharedNamespace }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "openstack-controller-role-{{ .Values.osdpl.tfSharedNamespace }}"
subjects:
  - kind: ServiceAccount
    name: openstack-controller-account
    namespace: {{ .Release.Namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openstack-controller.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "openstack-controller.name" . }}
    helm.sh/chart: {{ include "openstack-controller.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxUnavailable: 100%
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "openstack-controller.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "openstack-controller.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: openstack-controller-account
      securityContext:
        # NOTE(vsaienko): The range 32768 60999 is default range used by application
        # to bind on local ports. Exclude 32768 - 32799 and use them for health probes
        sysctls:
        - name: net.ipv4.ip_local_port_range
          value: 32800 60999
      initContainers:
        - name: remove-default-finalizer
          command:
          - osctl-remove-default-finalizer
          env:
{{ tuple . | include "openstack-controller.common_env" | indent 12 }}
          image: {{ tuple . .Values.image | include "getImageUrl" }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
      containers:
        - name: osdpl
          image: {{ tuple . .Values.image | include "getImageUrl" }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - kopf
            - run
            - '-n'
            - {{ .Values.osdpl.namespace }}
            - '-P'
            - openstack-controller.osdpl
            - '-m'
            - openstack_controller.controllers.openstackdeployment
            - '-m'
            - openstack_controller.controllers.probe
            - '-L'
            - 'http://0.0.0.0:32768/healthz'
          env:
            {{- range $optionName, $optionValue := .Values.osdpl.settings.raw }}
            - name: {{ $optionName }}
              value: "{{ $optionValue }}"
            {{- end }}
            {{- range $optionName, $optionValue := .Values.osdpl.settings.osdpl.raw }}
            - name: {{ $optionName }}
              value: "{{ $optionValue }}"
            {{- end }}
            - name: OSDPL_IAM_DATA
              value: '{{ toJson .Values.iam }}'
            - name: OSCTL_PROXY_DATA
              value: '{{ toJson .Values.global.proxy }}'
{{ tuple . | include "openstack-controller.common_env" | indent 12 }}
          livenessProbe:
            exec:
              command:
                - curl
                - http://127.0.0.1:32768/healthz
            {{- toYaml .Values.osdpl.pod.controller.secrets.liveness.params | nindent 12}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: os-clouds
              mountPath: /etc/openstack/
        - name: secrets
          image: {{ tuple . .Values.image | include "getImageUrl" }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - kopf
            - run
            - '-n'
            - {{ .Values.osdpl.namespace }}
            - '-P'
            - openstack-controller.secrets
            - '-m'
            - openstack_controller.controllers.secrets
            - '-m'
            - openstack_controller.controllers.probe
            - '-L'
            - 'http://0.0.0.0:32770/healthz'
          env:
            {{- range $optionName, $optionValue := .Values.osdpl.settings.raw }}
            - name: {{ $optionName }}
              value: "{{ $optionValue }}"
            {{- end }}
            {{- range $optionName, $optionValue := .Values.osdpl.settings.secrets.raw }}
            - name: {{ $optionName }}
              value: "{{ $optionValue }}"
            {{- end }}
{{ tuple . | include "openstack-controller.common_env" | indent 12 }}
          livenessProbe:
            exec:
              command:
                - curl
                - http://127.0.0.1:32770/healthz
            {{- toYaml .Values.osdpl.pod.controller.secrets.liveness.params | nindent 12}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: os-clouds
              mountPath: /etc/openstack/
        - name: health
          image: {{ tuple . .Values.image | include "getImageUrl" }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - kopf
            - run
            - '-n'
            - {{ .Values.osdpl.namespace }}
            - '-P'
            - openstack-controller.health
            - '-m'
            - openstack_controller.controllers.health
            - '-m'
            - openstack_controller.controllers.probe
            - '-L'
            - 'http://0.0.0.0:32771/healthz'
          env:
            {{- range $optionName, $optionValue := .Values.osdpl.settings.raw }}
            - name: {{ $optionName }}
              value: "{{ $optionValue }}"
            {{- end }}
            {{- range $optionName, $optionValue := .Values.osdpl.settings.health.raw }}
            - name: {{ $optionName }}
              value: "{{ $optionValue }}"
            {{- end }}
{{ tuple . | include "openstack-controller.common_env" | indent 12 }}
          livenessProbe:
            exec:
              command:
                - curl
                - http://127.0.0.1:32771/healthz
            {{- toYaml .Values.osdpl.pod.controller.health.liveness.params | nindent 12}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: os-clouds
              mountPath: /etc/openstack/
        - name: node
          image: {{ tuple . .Values.image | include "getImageUrl" }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - kopf
            - run
            - '-n'
            - {{ .Values.osdpl.namespace }}
            - '-P'
            - openstack-controller.node
            - '-m'
            - openstack_controller.controllers.node
            - '-m'
            - openstack_controller.controllers.probe
            - '-L'
            - 'http://0.0.0.0:32772/healthz'
          env:
            {{- range $optionName, $optionValue := .Values.osdpl.settings.raw }}
            - name: {{ $optionName }}
              value: "{{ $optionValue }}"
            {{- end }}
            {{- range $optionName, $optionValue := .Values.osdpl.settings.node.raw }}
            - name: {{ $optionName }}
              value: "{{ $optionValue }}"
            {{- end }}
{{ tuple . | include "openstack-controller.common_env" | indent 12 }}
          livenessProbe:
            exec:
              command:
                - curl
                - http://127.0.0.1:32772/healthz
            {{- toYaml .Values.osdpl.pod.controller.node.liveness.params | nindent 12}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: os-clouds
              mountPath: /etc/openstack/
{{ if .Values.node_maintenance.enabled }}
        - name: nodemaintenancerequest
          image: {{ tuple . .Values.image | include "getImageUrl" }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - kopf
            - run
            - '-n'
            - {{ .Values.osdpl.namespace }}
            - '-P'
            - openstack-controller.nodemaintenancerequest
            - '-m'
            - openstack_controller.controllers.maintenance
            - '-m'
            - openstack_controller.controllers.probe
            - '-L'
            - 'http://0.0.0.0:32773/healthz'
          env:
            - name: OSCTL_LOGGING_CONF
              value: '{{ toJson .Values.osdpl.settings.node_maintenance_request.OSCTL_LOGGING_CONF }}'
            {{- range $optionName, $optionValue := .Values.osdpl.settings.raw }}
            - name: {{ $optionName }}
              value: "{{ $optionValue }}"
            {{- end }}
            {{- range $optionName, $optionValue := .Values.osdpl.settings.node_maintenance_request.raw }}
            - name: {{ $optionName }}
              value: "{{ $optionValue }}"
            {{- end }}
{{ tuple . | include "openstack-controller.common_env" | indent 12 }}
          livenessProbe:
            exec:
              command:
                - curl
                - http://127.0.0.1:32773/healthz
            {{- toYaml .Values.osdpl.pod.controller.node_maintenance_request.liveness.params | nindent 12}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: os-clouds
              mountPath: /etc/openstack/
{{ end }}
        - name: ceph-secrets
          image: {{ tuple . .Values.image | include "getImageUrl" }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - kopf
            - run
            - '-n'
            - {{ .Values.osdpl.cephSharedNamespace}}
            - '-P'
            - openstack-controller.ceph.secrets
            - '-m'
            - openstack_controller.controllers.ceph.secrets
            - '-m'
            - openstack_controller.controllers.probe
            - '-L'
            - 'http://0.0.0.0:32774/healthz'
          env:
            {{- range $optionName, $optionValue := .Values.osdpl.settings.raw }}
            - name: {{ $optionName }}
              value: "{{ $optionValue }}"
            {{- end }}
            - name: OSCTL_HEARTBEAT_PEERING_OBJECT_NAME
              value: openstack-controller.ceph.secrets
{{ tuple . | include "openstack-controller.common_env" | indent 12 }}
          livenessProbe:
            exec:
              command:
                - curl
                - http://127.0.0.1:32774/healthz
            {{- toYaml .Values.osdpl.pod.controller.node_maintenance_request.liveness.params | nindent 12}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: os-clouds
              mountPath: /etc/openstack/
        - name: osdplstatus
          image: {{ tuple . .Values.image | include "getImageUrl" }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - kopf
            - run
            - '-n'
            - {{ .Values.osdpl.namespace }}
            - '-P'
            - openstack-controller.osdplstatus
            - '-m'
            - openstack_controller.controllers.openstackdeploymentstatus
            - '-m'
            - openstack_controller.controllers.probe
            - '-L'
            - 'http://0.0.0.0:32775/healthz'
          env:
            {{- range $optionName, $optionValue := .Values.osdpl.settings.raw }}
            - name: {{ $optionName }}
              value: "{{ $optionValue }}"
            {{- end }}
            {{- range $optionName, $optionValue := .Values.osdpl.settings.osdplstatus.raw }}
            - name: {{ $optionName }}
              value: "{{ $optionValue }}"
            {{- end }}
{{ tuple . | include "openstack-controller.common_env" | indent 12 }}
          livenessProbe:
            exec:
              command:
                - curl
                - http://127.0.0.1:32775/healthz
            {{- toYaml .Values.osdpl.pod.controller.secrets.liveness.params | nindent 12}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: os-clouds
              mountPath: /etc/openstack/
        - name: osdplsecret
          image: {{ tuple . .Values.image | include "getImageUrl" }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - kopf
            - run
            - '-n'
            - {{ .Values.osdpl.namespace }}
            - '-P'
            - openstack-controller.osdplsecret
            - '-m'
            - openstack_controller.controllers.openstackdeploymentsecret
            - '-m'
            - openstack_controller.controllers.probe
            - '-L'
            - 'http://0.0.0.0:32776/healthz'
          env:
            {{- range $optionName, $optionValue := .Values.osdpl.settings.raw }}
            - name: {{ $optionName }}
              value: "{{ $optionValue }}"
            {{- end }}
            {{- range $optionName, $optionValue := .Values.osdpl.settings.osdplsecret.raw }}
            - name: {{ $optionName }}
              value: "{{ $optionValue }}"
            {{- end }}
{{ tuple . | include "openstack-controller.common_env" | indent 12 }}
          livenessProbe:
            exec:
              command:
                - curl
                - http://127.0.0.1:32776/healthz
            {{- toYaml .Values.osdpl.pod.controller.secrets.liveness.params | nindent 12}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: os-clouds
              mountPath: /etc/openstack/
      volumes:
        - name: os-clouds
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
