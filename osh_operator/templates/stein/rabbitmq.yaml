apiVersion: lcm.mirantis.com/v1alpha1
kind: HelmBundle
metadata:
  name: openstack-messaging
spec:
  releases:
  - name: openstack-rabbitmq
    chart: {{spec.common.infra.get('repo', spec.common.charts.repo)}}/rabbitmq
    values:
      pod:
        replicas:
          server: 1
      manifests:
        network_policy: false
{%- set create_user_credentials = spec.get('features', {}).get('messaging', {}).get('create_user_credentials', False) %}
{%- if create_user_credentials %}
        job_users_create: true
{%- endif %}
      volume:
        enabled: false
{%- if create_user_credentials %}
      conf:
        users:
          keystone_service:
            auth:
              keystone_username:
                username: keystone
                password: password
            path: /keystone
          keystone_service_notifications:
            auth:
              keystone_username:
                username: keystone
                password: password
            path: /openstack
          glance_service:
            auth:
              glance_username:
                username: glance
                password: password
            path: /glance
          glance_service_notifications:
            auth:
              glance_username:
                username: glance
                password: password
            path: /openstack
          cinder_service:
            auth:
              cinder:
                username: cinder
                password: password
            path: /cinder
          cinder_service_notifications:
            auth:
              cinder:
                username: cinder
                password: password
            path: /openstack
          heat_service:
            auth:
              heat:
                username: heat
                password: password
            path: /heat
          heat_service_notifications:
            auth:
              heat:
                username: heat
                password: password
            path: /openstack
          neutron_service:
            auth:
              neutron:
                username: neutron
                password: password
            path: /neutron
          neutron_service_notifications:
            auth:
              neutron:
                username: neutron
                password: password
            path: /openstack
          nova_service:
            auth:
              nova:
                username: nova
                password: password
            path: /nova
          nova_service_notifications:
            auth:
              nova:
                username: nova
                password: password
            path: /openstack
          octavia_service:
            auth:
              octavia:
                username: octavia
                password: password
            path: /octavia
          octavia_service_notifications:
            auth:
              octavia:
                username: octavia
                password: password
            path: /openstack
        aux_conf:
          policies:
          - vhost: heat
            name: heat_engine_rpc_expire
            pattern: '^heat-engine-listener\.'
            definition:
              expires: 3600000
            priority: 1
          - vhost: heat
            name: heat_worker_rpc_expire
            pattern: '^engine_worker\.'
            definition:
              expires: 3600000
            priority: 1
  {%- for item in [ 'cinder', 'nova', 'glance', 'keystone', 'heat', 'neutron', 'octavia', 'openstack'] %}
          - vhost: {{ item }}
            name: default-policy-{{ item }}
            pattern: '^(?!amq\.).*'
            definition:
              message-ttl: 120000
          - vhost: {{ item }}
            name: results_expire_{{ item }}
            pattern: '^results\.'
            definition:
              expires: 3600000
            priority: 1
          - vhost: {{ item }}
            name: tasks_expire_{{ item }}
            pattern: '^tasks\.'
            definition:
              expires: 3600000
            priority: 1
  {%- endfor %}
{%- endif %}
      endpoints:
        cluster_domain_suffix: {{ spec.domain_name }}
        oslo_messaging:
          statefulset:
            replicas: 1
            name: openstack-rabbitmq-rabbitmq
          hosts:
            default: rabbitmq
          path: /openstack
