{%- set stacklight_enabled = spec.get('features', {}).get('stacklight', {}).get('enabled', False) %}

spec:
  releases:
  - name: openstack-rabbitmq
    chart: {{spec.common.infra.get('repo', spec.common.charts.repo)}}/rabbitmq
    values:
  {%- if stacklight_enabled %}
      monitoring:
        prometheus:
          enabled: true
  {%- endif %}
      pod:
        replicas:
          server: 1
      manifests:
        network_policy: false
        job_users_create: true
      volume:
        enabled: false
      conf:
        users:
          {%- if 'identity' in services %}
          keystone_service:
            auth:
              keystone_username:
                username: {{ credentials['identity'].messaging.user.username }}
                password: {{ credentials['identity'].messaging.user.password }}
            path: /keystone
          keystone_service_notifications:
            auth:
              keystone_username:
                username: {{ credentials['identity'].notifications.user.username }}
                password: {{ credentials['identity'].notifications.user.password }}
            path: /openstack
          {%- endif %}
          {%- if 'image' in services %}
          glance_service:
            auth:
              glance_username:
                username: {{ credentials['image'].messaging.user.username }}
                password: {{ credentials['image'].messaging.user.password }}
            path: /glance
          glance_service_notifications:
            auth:
              glance_username:
                username: {{ credentials['image'].notifications.user.username }}
                password: {{ credentials['image'].notifications.user.password }}
            path: /openstack
          {%- endif %}
          {%- if 'block-storage' in services %}
          cinder_service:
            auth:
              cinder:
                username: {{ credentials['block-storage'].messaging.user.username }}
                password: {{ credentials['block-storage'].messaging.user.password }}
            path: /cinder
          cinder_service_notifications:
            auth:
              cinder:
                username: {{ credentials['block-storage'].notifications.user.username }}
                password: {{ credentials['block-storage'].notifications.user.password }}
            path: /openstack
          {%- endif %}
          {%- if 'orchestration' in services %}
          heat_service:
            auth:
              heat:
                username: {{ credentials['orchestration'].messaging.user.username }}
                password: {{ credentials['orchestration'].messaging.user.password }}
            path: /heat
          heat_service_notifications:
            auth:
              heat:
                username: {{ credentials['orchestration'].notifications.user.username }}
                password: {{ credentials['orchestration'].notifications.user.password }}
            path: /openstack
          {%- endif %}
          {%- if 'networking' in services %}
          neutron_service:
            auth:
              neutron:
                username: {{ credentials['networking'].messaging.user.username }}
                password: {{ credentials['networking'].messaging.user.password }}
            path: /neutron
          neutron_service_notifications:
            auth:
              neutron:
                username: {{ credentials['networking'].notifications.user.username }}
                password: {{ credentials['networking'].notifications.user.password }}
            path: /openstack
          {%- endif %}
          {%- if 'compute' in services %}
          nova_service:
            auth:
              nova:
                username: {{ credentials['compute'].messaging.user.username }}
                password: {{ credentials['compute'].messaging.user.password }}
            path: /nova
          nova_service_notifications:
            auth:
              nova:
                username: {{ credentials['compute'].notifications.user.username }}
                password: {{ credentials['compute'].notifications.user.password }}
            path: /openstack
          {%- endif %}
          {%- if 'load-balancer' in services %}
          octavia_service:
            auth:
              octavia:
                username: {{ credentials['load-balancer'].messaging.user.username }}
                password: {{ credentials['load-balancer'].messaging.user.password }}
            path: /octavia
          octavia_service_notifications:
            auth:
              octavia:
                username: {{ credentials['load-balancer'].notifications.user.username }}
                password: {{ credentials['load-balancer'].notifications.user.password }}
            path: /openstack
          {%- endif %}
          {%- if 'dns' in services %}
          designate_service:
            auth:
              designate:
                username: {{ credentials['dns'].messaging.user.username }}
                password: {{ credentials['dns'].messaging.user.password }}
            path: /designate
          designate_service_notifications:
            auth:
              designate:
                username: {{ credentials['dns'].notifications.user.username }}
                password: {{ credentials['dns'].notifications.user.password }}
            path: /openstack
          {%- endif %}
          {%- if 'key-manager' in services %}
          barbican_service:
            auth:
              barbican:
                username: {{ credentials['key-manager'].messaging.user.username }}
                password: {{ credentials['key-manager'].messaging.user.password }}
            path: /barbican
          barbican_service_notifications:
            auth:
              barbican:
                username: {{ credentials['key-manager'].notifications.user.username }}
                password: {{ credentials['key-manager'].notifications.user.password }}
            path: /openstack
          {%- endif %}
        aux_conf:
          policies:
          - vhost: heat
            name: heat_engine_rpc_expire
            pattern: '^heat-engine-listener\.'
            definition:
              expires: 3600000
            priority: 1
          - vhost: heat
            name: heat_worker_rpc_expire
            pattern: '^engine_worker\.'
            definition:
              expires: 3600000
            priority: 1
  {%- for item in [ 'cinder', 'nova', 'glance', 'keystone', 'heat', 'neutron', 'octavia', 'openstack', 'designate', 'barbican'] %}
          - vhost: {{ item }}
            name: default-policy-{{ item }}
            pattern: '^(?!amq\.).*'
            definition:
              message-ttl: 120000
          - vhost: {{ item }}
            name: results_expire_{{ item }}
            pattern: '^results\.'
            definition:
              expires: 3600000
            priority: 1
          - vhost: {{ item }}
            name: tasks_expire_{{ item }}
            pattern: '^tasks\.'
            definition:
              expires: 3600000
            priority: 1
  {%- endfor %}
      endpoints:
        cluster_domain_suffix: {{ spec.domain_name }}
        oslo_messaging:
          auth:
            user:
              username: {{ admin_creds.messaging.username }}
              password: {{ admin_creds.messaging.password }}
          statefulset:
            replicas: 1
            name: openstack-rabbitmq-rabbitmq
          hosts:
            default: rabbitmq
          path: /openstack
