apiVersion: lcm.mirantis.com/v1alpha1
kind: HelmBundle
metadata:
  name: openstack-orchestration
spec:
  releases:
{%- if spec.get('features', {}).get('messaging', {}).get('dedicated_rabbitmq', {}).get('enabled', True) %}
  - name: openstack-heat-rabbitmq
    chart: {{spec.common.infra.repo}}/rabbitmq
    values:
      pod:
        replicas:
          server: 1
      manifests:
        network_policy: false
{%- if spec.get('features', {}).get('messaging', {}).get('create_user_credentials', False) %}
        job_users_create: true
{%- endif %}
      volume:
{%- if spec.get('features', {}).get('messaging', {}).get('local_volumes', {}).get('enabled', False) %}
        class_name: local-provisioner
{%- else %}
        class_name: rook-ceph-block
{%- endif %}
      endpoints:
        oslo_messaging: &heat_endpoints_oslo_messaging
          statefulset:
            replicas: 1
            name: openstack-heat-rabbitmq-rabbitmq
          hosts:
            default: rabbitmq-heat
            path: /heat
{%- if spec.get('features', {}).get('messaging', {}).get('create_user_credentials', False) %}
      conf:
        users:
          heat:
            auth:
              service_user:
                username: heat
                password: password
            path: /heat
{%- endif %}
{%- endif %}
  - name: openstack-heat
    chart: {{spec.common.openstack.repo}}/heat
    values:
      manifests:
        network_policy: false
{%- if spec.get('features', {}).get('messaging', {}).get('create_user_credentials', False) %}
        job_rabbit_init: false
{%- endif %}
      endpoints:
{%- if spec.get('features', {}).get('messaging', {}).get('dedicated_rabbitmq', {}).get('enabled', True) %}
        oslo_messaging:
          <<: *heat_endpoints_oslo_messaging
        oslo_messaging_notifications:
          statefulset:
            replicas: 1
            name: openstack-rabbitmq-rabbitmq
          hosts:
            default: rabbitmq-notifications
          path: /openstack
{%- endif %}
{%- if spec.get('features', {}).get('ssl', {}).get('public_endpoints', {}).get('enabled', True) %}
        orchestration:
          host_fqdn_override:
            public:
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, indentfirst=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, indentfirst=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, indentfirst=True) }}
          hosts:
            admin:
              host: heat-api
            default: heat
            internal: heat-api
            public:
              host: heat
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, indentfirst=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, indentfirst=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, indentfirst=True) }}
          port:
            api:
              admin: 8004
              default: 80
              internal: 8004
              public: 443
          scheme:
            default: http
            public: https
        cloudformation:
          host_fqdn_override:
            public:
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, indentfirst=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, indentfirst=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, indentfirst=True) }}
          hosts:
            admin:
              host: heat-cfn
            default: cloudformation
            internal: heat-cfn
            public:
              host: cloudformation
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, indentfirst=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, indentfirst=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, indentfirst=True) }}
          port:
            api:
              admin: 8000
              default: 80
              internal: 8000
              public: 443
          scheme:
            default: http
            public: https
{%- endif %}
