apiVersion: lcm.mirantis.com/v1alpha1
kind: HelmBundle
metadata:
  name: openstack-image
spec:
  releases:
{%- if spec.get('features', {}).get('messaging', {}).get('dedicated_rabbitmq', {}).get('enabled', True) %}
  - name: openstack-glance-rabbitmq
    chart: {{spec.common.infra.get('repo', spec.common.charts.repo)}}/rabbitmq
    values:
      pod:
        replicas:
          server: 1
      manifests:
        network_policy: false
      volume:
{%- if spec.get('features', {}).get('messaging', {}).get('local_volumes', {}).get('enabled', False) %}
        class_name: local-provisioner
{%- else %}
        class_name: rook-ceph-block
{%- endif %}
      endpoints:
        oslo_messaging: &glance_endpoints_oslo_messaging
          statefulset:
            replicas: 1
            name: openstack-glance-rabbitmq-rabbitmq
          hosts:
            default: rabbitmq-glance
          path: /glance
{%- endif %}
  - name: openstack-glance
    chart: {{spec.common.openstack.get('repo', spec.common.charts.repo)}}/glance
    values:
      pod:
        replicas:
          api: 1
          registry: 1
      storage: rbd
      conf:
        glance:
          DEFAULT:
            enable_v1_api: True
            enable_v2_registry: True
          glance_store:
            rbd_store_crush_rule: replicated_ruleset
      volume:
        class_name: rook-ceph-block
        size: 2Gi
      ceph_client:
        configmap: rook-ceph-config
        user_secret_name: rook-ceph-admin-keyring
      manifests:
        network_policy: false
{%- if spec.get('features', {}).get('messaging', {}).get('dedicated_rabbitmq', {}).get('enabled', True) %}
      endpoints:
        oslo_messaging:
          <<: *glance_endpoints_oslo_messaging
{%- endif %}
