apiVersion: lcm.mirantis.com/v1alpha1
kind: HelmBundle
metadata:
  name: openstack-image
  annotations:
    lcm.mirantis.com/ceph_required: 'True'
spec:
  releases:
{%- if spec.get('features', {}).get('messaging', {}).get('dedicated_rabbitmq', {}).get('enabled', True) %}
  - name: openstack-glance-rabbitmq
    chart: {{spec.common.infra.repo}}/rabbitmq
    values:
      pod:
        replicas:
          server: 1
      manifests:
        network_policy: false
{%- if spec.get('features', {}).get('messaging', {}).get('create_user_credentials', False) %}
        job_users_create: true
{%- endif %}
      volume:
        enabled: false
      endpoints:
        cluster_domain_suffix: {{ spec.domain_name }}
        oslo_messaging: &glance_endpoints_oslo_messaging
          statefulset:
            replicas: 1
            name: openstack-glance-rabbitmq-rabbitmq
          hosts:
            default: rabbitmq-glance
          path: /glance
{%- if spec.get('features', {}).get('messaging', {}).get('create_user_credentials', False) %}
      conf:
        users:
          glance:
            auth:
              service_user:
                username: glance
                password: password
            path: /glance
{%- endif %}
{%- endif %}
  - name: openstack-glance
    chart: {{spec.common.openstack.repo}}/glance
    values:
      dependencies:
        static:
          db_init:
            jobs:
              - openstack-mariadb-cluster-wait
      pod:
        replicas:
          api: 1
          registry: 1
      storage: rbd
      conf:
        glance:
          DEFAULT:
            enable_v1_api: True
            enable_v2_registry: True
          glance_store:
            rbd_store_crush_rule: replicated_ruleset
      volume:
        class_name: rook-ceph-block
        size: 2Gi
      ceph_client:
        configmap: rook-ceph-config
        user_secret_name: rook-ceph-admin-keyring
      manifests:
        network_policy: false
{%- if spec.get('features', {}).get('messaging', {}).get('create_user_credentials', False) %}
        job_rabbit_init: false
{%- endif %}
{%- if spec.get('features', {}).get('ssl', {}).get('public_endpoints', {}).get('enabled', True) %}
        secret_ca_bundle: true
{%- endif %}
      endpoints:
        cluster_domain_suffix: {{ spec.domain_name }}
        identity:
          auth:
            admin:
              region_name: {{ spec.features.keystone.users.admin.get('region_name', 'RegionOne') }}
              username: {{ spec.features.keystone.users.admin.username }}
              password: {{ spec.features.keystone.users.admin.password }}
              project_name: {{ spec.features.keystone.users.admin.get('project_name', 'admin') }}
              user_domain_name: {{ spec.features.keystone.users.admin.get('user_domain_name', 'default') }}
              project_domain_name: {{ spec.features.keystone.users.admin.get('project_domain_name', 'default') }}
              default_domain_id: {{ spec.features.keystone.users.admin.get('default_domain_id', 'default') }}
{%- if spec.get('features', {}).get('messaging', {}).get('dedicated_rabbitmq', {}).get('enabled', True) %}
        oslo_messaging:
          <<: *glance_endpoints_oslo_messaging
{%- endif %}
        oslo_messaging_notifications:
          auth:
            glance:
              password: password
              username: glance
          host_fqdn_override: {}
          hosts:
            default: rabbitmq
          path: /openstack
          port:
            amqp:
              default: 5672
            http:
              default: 15672
          scheme: rabbit
          statefulset:
            name: openstack-rabbitmq-rabbitmq
            replicas: 1
{%- if spec.get('features', {}).get('ssl', {}).get('public_endpoints', {}).get('enabled', True) %}
        image:
          host_fqdn_override:
            public:
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, indentfirst=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, indentfirst=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, indentfirst=True) }}
          hosts:
            admin:
              host: glance-api
            default: glance
            internal: glance-api
            public:
              host: glance
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, indentfirst=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, indentfirst=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, indentfirst=True) }}
          port:
            api:
              admin: 9292
              default: 80
              internal: 9292
              public: 443
          scheme:
            default: http
            public: https
{%- endif %}
