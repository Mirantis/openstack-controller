apiVersion: lcm.mirantis.com/v1alpha1
kind: HelmBundle
metadata:
  name: openstack-networking
spec:
  releases:
{%- if spec.get('features', {}).get('messaging', {}).get('dedicated_rabbitmq', {}).get('enabled', True) %}
  - name: openstack-neutron-rabbitmq
    chart: {{spec.common.infra.get('repo', spec.common.charts.repo)}}/rabbitmq
    values:
      pod:
        replicas:
          server: 1
      manifests:
        network_policy: false
      volume:
{%- if spec.get('features', {}).get('messaging', {}).get('local_volumes', {}).get('enabled', False) %}
        class_name: local-provisioner
{%- else %}
        class_name: rook-ceph-block
{%- endif %}
      endpoints:
        oslo_messaging: &neutron_endpoints_oslo_messaging
          statefulset:
            replicas: 1
            name: openstack-neutron-rabbitmq-rabbitmq
          hosts:
            default: rabbitmq-neutron
          path: /neutron
{%- endif %}
  - name: openstack-openvswitch
    chart: {{spec.common.infra.get('repo', spec.common.charts.repo)}}/openvswitch
    values:
      images:
        tags:
          openvswitch_db_server: docker.io/openstackhelm/openvswitch:latest-debian
          openvswitch_vswitchd: docker.io/openstackhelm/openvswitch:latest-debian
  - name: openstack-neutron
    chart: {{spec.common.openstack.get('repo', spec.common.charts.repo)}}/neutron
    values:
{%- if spec.get('features', {}).get('messaging', {}).get('dedicated_rabbitmq', {}).get('enabled', True) %}
      endpoints:
        oslo_messaging:
          <<: *neutron_endpoints_oslo_messaging
{%- endif %}
      network:
        interface:
          tunnel: ens3
      conf:
        paste:
          app:neutronversions:
            paste.app_factory: neutron.pecan_wsgi.app:versions_factory
        neutron:
          DEFAULT:
            l3_ha: False
            max_l3_agents_per_router: 1
            l3_ha_network_type: vxlan
            dhcp_agents_per_network: 1
        plugins:
          ml2_conf:
            ml2_type_flat:
              flat_networks: public
          openvswitch_agent:
            agent:
              tunnel_types: vxlan
            ovs:
              bridge_mappings: public:br-ex
          linuxbridge_agent:
            linux_bridge:
              bridge_mappings: public:br-ex
