spec:
  auth:
    secretPath: generated-redis-password
  labelWhitelist:
  - ^app.*
  redis:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: openstack-control-plane
              operator: In
              values:
              - enabled
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values:
              - redis
          topologyKey: kubernetes.io/hostname
    containerSecurityContext:
      allowPrivilegeEscalation: False
      capabilities:
        drop:
        - ALL
      privileged: False
      readOnlyRootFilesystem: True
      runAsGroup: 65534
      runAsNonRoot: True
      runAsUser: 65534
    customConfig:
    - save 600 1
    - save 300 10
    - save 60 1000
    - save 10 10000
    - client-output-buffer-limit slave 512mb 512mb 0
    image: redis-failover:latest
    replicas: 3
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: True
      runAsUser: 65534
    storage:
      keepAfterDeletion: true
      persistentVolumeClaim:
        metadata:
          name: lvp-fake-root
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
          storageClassName: lvp-fake-root
  sentinel:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: openstack-control-plane
              operator: In
              values:
              - enabled
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values:
              - sentinel
          topologyKey: kubernetes.io/hostname
    configCopy:
      containerSecurityContext:
        allowPrivilegeEscalation: False
        capabilities:
          drop:
          - ALL
        privileged: False
        readOnlyRootFilesystem: True
        runAsGroup: 65534
        runAsNonRoot: True
        runAsUser: 65534
    containerSecurityContext:
      allowPrivilegeEscalation: False
      capabilities:
        drop:
        - ALL
      privileged: False
      readOnlyRootFilesystem: True
      runAsGroup: 65534
      runAsNonRoot: True
      runAsUser: 65534
    customConfig:
    - down-after-milliseconds 2000
    - failover-timeout 10000
    - parallel-syncs 1
    image: redis-failover:latest
    replicas: 3
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: True
      runAsUser: 65534
