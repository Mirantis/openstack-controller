#apiVersion: lcm.mirantis.com/v1alpha1
#kind: HelmBundle

{%- set service = 'designate' %}
{%- set messaging = spec.get('features', {}).get('messaging', {}) %}
{%- set stacklight_enabled = spec.get('features', {}).get('stacklight', {}).get('enabled', False) %}
{%- set notification_topics = ['notifications'] %}
{%- do notification_topics.append('stacklight_notifications') if stacklight_enabled %}

spec:
  releases:
{%- if messaging.get('dedicated_rabbitmq', {}).get('enabled', True) %}
  - name: openstack-designate-rabbitmq
    chart: {{spec.common.infra.repo}}/rabbitmq
    values:
{% include 'base/_rabbitmq_images.yaml' %}
  {%- if stacklight_enabled %}
      monitoring:
        prometheus:
          enabled: true
  {%- endif %}
      pod:
        replicas:
          server: 1
      manifests:
        network_policy: false
        job_users_create: true
      volume:
        enabled: false
      endpoints:
        cluster_domain_suffix: {{ spec.domain_name }}
        oslo_messaging: &designate_endpoints_oslo_messaging
          auth:
            admin:
              username: {{ admin_creds.messaging.username }}
              password: {{ admin_creds.messaging.password }}
            designate:
              username: {{ credentials.messaging.user.username }}
              password: {{ credentials.messaging.user.password }}
          statefulset:
            replicas: 1
            name: openstack-designate-rabbitmq-rabbitmq
          hosts:
            default: rabbitmq-designate
            path: /designate
        prometheus_rabbitmq_exporter:
          hosts:
            default: rabbitmq-exporter-designate
      conf:
        users:
          designate:
            auth:
              service_user:
                username: {{ credentials.messaging.user.username }}
                password: {{ credentials.messaging.user.password }}
            path: /designate
        aux_conf:
          policies:
          - vhost: designate
            name: default-policy
            pattern: '^(?!amq\.).*'
            definition:
              message-ttl: 120000
          - vhost: designate
            name: results_expire
            pattern: '^results\.'
            definition:
              expires: 3600000
            priority: 1
          - vhost: designate
            name: tasks_expire
            pattern: '^tasks\.'
            definition:
              expires: 3600000
            priority: 1
  {%- if stacklight_enabled %}
        prometheus_exporter:
          rabbit_exporters: "overview,exchange,node"
  {%- endif %}
{%- endif %}
  - name: openstack-designate
    chart: {{spec.common.openstack.repo}}/designate
    values:
      images:
        tags:
{%- for image in [
    "ks_service",
    "db_drop",
    "designate_sink",
    "designate_producer",
    "bootstrap",
    "designate_mdns",
    "ks_endpoints",
    "designate_api",
    "db_init",
    "dep_check",
    "designate_db_sync",
    "ks_user",
    "rabbit_init",
    "designate_worker",
    "designate_central",] %}
        {%- if image in images %}
          {{ image }}: {{ images[image] }}
        {%- endif %}
{%- endfor %}
      dependencies:
        static:
          db_init:
            jobs:
              - openstack-mariadb-cluster-wait
      conf:
        designate:
          keystone_authtoken:
            memcache_security_strategy: ENCRYPT
            memcache_secret_key: {{ credentials.memcached }}
          service:api:
            enabled_extensions_admin: quotas
          oslo_messaging_notifications:
            topics: {{ notification_topics|join(',') }}
        logging:
          logger_designate:
            level: {{ spec.get('features', {}).get('logging', {}).get('designate', {}).get('level', 'INFO') }}
      manifests:
        network_policy: false
        job_rabbit_init: false
{%- if spec.get('features', {}).get('ssl', {}).get('public_endpoints', {}).get('enabled', True) %}
        secret_ca_bundle: true
{%- endif %}
      endpoints:
        cluster_domain_suffix: {{ spec.domain_name }}
{% include 'base/_admin_identity.yaml' %}
        oslo_db:
          auth:
            admin:
              username: {{ admin_creds.database.username }}
              password: {{ admin_creds.database.password }}
            designate:
              username: {{ credentials.database.user.username }}
              password: {{ credentials.database.user.password }}
{%- if messaging.get('dedicated_rabbitmq', {}).get('enabled', True) %}
        oslo_messaging:
          <<: *designate_endpoints_oslo_messaging
{%- endif %}
{% include 'base/_notifications.yaml' %}
{%- if spec.get('features', {}).get('ssl', {}).get('public_endpoints', {}).get('enabled', True) %}
        dns:
          host_fqdn_override:
            public:
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, indentfirst=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, indentfirst=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, indentfirst=True) }}
          hosts:
            admin:
              host: designate-api
            default: designate
            internal: designate-api
            public:
              host: designate
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, indentfirst=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, indentfirst=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, indentfirst=True) }}
          port:
            api:
              admin: 9001
              default: 80
              internal: 9001
              public: 443
          scheme:
            default: http
            public: https
        mdns:
          host_fqdn_override:
            public:
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, indentfirst=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, indentfirst=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, indentfirst=True) }}
          hosts:
            admin:
              host: designate-mdns
            default: minidns
            public:
              host: minidns
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, indentfirst=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, indentfirst=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, indentfirst=True) }}
          port:
            ipc:
              admin: 5354
              default: 80
              internal: 5354
              public: 443
          scheme:
            default: http
            public: https
{%- endif %}
  - name: openstack-powerdns
    chart: {{spec.common.infra.repo}}/powerdns
    values:
      images:
        tags:
{%- for image in [
    "powerdns",
    "dep_check",
    "db_init",
    "powerdns_db_sync",
    "image_repo_sync",] %}
        {%- if image in images %}
          {{ image }}: {{ images[image] }}
        {%- endif %}
{%- endfor %}
      dependencies:
        static:
          db_init:
            jobs:
              - openstack-mariadb-cluster-wait
      manifests:
        network_policy: false
        service_api: true
      endpoints:
        cluster_domain_suffix: {{ spec.domain_name }}
        oslo_db:
          auth:
            admin:
              username: {{ admin_creds.database.username }}
              password: {{ admin_creds.database.password }}
            powerdns:
              username: {{ powerdns.database.user.username }}
              password: {{ powerdns.database.user.password }}
