#apiVersion: lcm.mirantis.com/v1alpha1
#kind: HelmBundle

{%- set service = 'octavia' %}
{%- set core_plugin = spec.features.neutron.get('backend', 'ml2') %}
{%- set ovn_enabled = core_plugin == 'ml2/ovn'%}
{%- set provider_map = {'amphora': 'amphora:The Octavia Amphora driver.',
                        'octavia': 'octavia:Deprecated alias of the Octavia Amphora driver.'} %}
# NOTE: amphorav2 is supported only from Ussuri
{%- if spec.openstack_version not in ['queens', 'rocky', 'stein', 'train'] %}
{%- do provider_map.update({'amphorav2': 'amphorav2:Extented Octavia Amphora driver with jobboard support.'})%}
{%- endif %}
{%- if ovn_enabled %}
  {%- do provider_map.update({'ovn': 'ovn:OVN provider driver'}) %}
{%- endif %}
{%- set components_with_dedicated_messaging = spec.get('features', {}).get('messaging', {}).get('components_with_dedicated_messaging', []) %}
{%- set stacklight_enabled = spec.get('features', {}).get('stacklight', {}).get('enabled', False) %}
{%- set tungstenfabric_enabled = spec.features.neutron.get('backend', 'ml2') == 'tungstenfabric' %}
{%- set ovn_enabled = spec.features.neutron.get('backend', 'ml2') == 'ml2/ovn'%}
{%- set notification_topics = ['notifications'] %}
{%- do notification_topics.append('stacklight_notifications') if stacklight_enabled %}
{%- set cadf_audit = spec.get('features', {}).get('logging', {}).get('cadf', {'enabled': false}) %}
{%- set cadf_audit_driver = spec.get('features', {}).get('logging', {}).get('cadf', {}).get('driver', 'messagingv2') %}

spec:
  available_releases:
    - "openstack-octavia-rabbitmq"
    - "openstack-octavia"
  releases:
{%- if 'load-balancer' in components_with_dedicated_messaging %}
  - name: openstack-octavia-rabbitmq
    chart: {{spec.common.infra.repo}}/rabbitmq
    values:
{% include 'base/_rabbitmq_images.yaml' %}
  {%- if stacklight_enabled %}
      monitoring:
        prometheus:
          enabled: true
  {%- endif %}
      pod:
        replicas:
          server: 1
      manifests:
        network_policy: false
        job_users_create: true
      volume:
        enabled: false
      endpoints:
        cluster_domain_suffix: {{ spec.internal_domain_name }}
{% include 'base/_messaging_dedicated.yaml' %}
      conf:
        users:
          octavia:
            auth:
              service_user:
                username: {{ credentials.messaging.user.username }}
                password: {{ credentials.messaging.user.password }}
            path: /octavia
        aux_conf:
          policies:
          - vhost: octavia
            name: default-policy
            pattern: '^(?!amq\.).*'
            definition:
              message-ttl: 120000
          - vhost: octavia
            name: results_expire
            pattern: '^results\.'
            definition:
              expires: 3600000
            priority: 1
          - vhost: octavia
            name: tasks_expire
            pattern: '^tasks\.'
            definition:
              expires: 3600000
            priority: 1
  {%- if stacklight_enabled %}
        prometheus_exporter:
          rabbit_exporters: "overview,exchange,node"
  {%- endif %}
{%- endif %}
{%- if spec.get('migration', {}).get('octavia', {}).get('deploy_main_service', True) %}
  - name: openstack-octavia
    chart: {{spec.common.openstack.get('repo', spec.common.charts.repo)}}/octavia
    values:
      octavia:
        settings:
          lbmgmt_subnets:
  {%- set lb_subnets = [] %}
  {%- if spec.features.get('octavia', {}).get('lb_network', {}).get('subnets', []) %}
      {%- do lb_subnets.extend(spec.features.octavia.lb_network.subnets) %}
  {%- else %}
      {%- do lb_subnets.append({"range": "10.255.0.0/16",
                                "pool_start": "10.255.1.0",
                                "pool_end": "10.255.255.254"}) %}
  {%- endif %}
  {%- for subnet in lb_subnets %}
            - range: {{ subnet.range }}
              pool_start: {{ subnet.pool_start }}
              pool_end: {{ subnet.pool_end }}
  {%- endfor %}
{%- if 'amphorav2' in provider_map.keys() %}
          enable_amphorav2: true
{%- endif %}
      images:
        tags:
{%- for image in [
    "openvswitch_vswitchd",
    "octavia_worker",
    "db_drop",
    "image_repo_sync",
    "ks_endpoints",
    "test",
    "db_init",
    "dep_check",
    "octavia_api",
    "ks_user",
    "ks_service",
    "octavia_db_sync",
    "octavia_db_sync_persistence",
    "octavia_health_manager_init",
    "bootstrap",
    "rabbit_init",
    "octavia_health_manager",
    "octavia_housekeeping",
    "octavia_driver_agent",
    "create_resources",] %}
        {%- if image in images %}
          {{ image }}: {{ images[image] }}
        {%- endif %}
{%- endfor %}
      dependencies:
        static:
          db_init:
            jobs:
              - openstack-mariadb-cluster-wait
      pod:
        replicas:
          worker: 3
          housekeeping: 3
          health_manager: 3
        probes:
          octavia_api:
            octavia_api:
              readiness:
                enabled: true
                params:
                  initialDelaySeconds: 5
                  timeoutSeconds: 5
              liveness:
                enabled: true
                params:
                  initialDelaySeconds: 30
                  timeoutSeconds: 5
        mounts:
          octavia_api:
            octavia_api:
              volumeMounts:
                - name: octavia-certs
                  mountPath: /etc/octavia/certs/private/cakey.pem
                  subPath: key
                - name: octavia-certs
                  mountPath: /etc/octavia/certs/ca_01.pem
                  subPath: cert
                - name: octavia-certs
                  mountPath: /etc/octavia/certs/client.pem
                  subPath: cert_all
              volumes:
                - name: octavia-certs
                  secret:
                    secretName: octavia-certs
                    defaultMode: 0644
            octavia_driver_agent:
              volumeMounts:
                - name: octavia-certs
                  mountPath: /etc/octavia/certs/private/cakey.pem
                  subPath: key
                - name: octavia-certs
                  mountPath: /etc/octavia/certs/ca_01.pem
                  subPath: cert
                - name: octavia-certs
                  mountPath: /etc/octavia/certs/client.pem
                  subPath: cert_all
              volumes:
                - name: octavia-certs
                  secret:
                    secretName: octavia-certs
                    defaultMode: 0644
          octavia_worker:
            octavia_worker:
              volumeMounts:
                - name: octavia-certs
                  mountPath: /etc/octavia/certs/private/cakey.pem
                  subPath: key
                - name: octavia-certs
                  mountPath: /etc/octavia/certs/ca_01.pem
                  subPath: cert
                - name: octavia-certs
                  mountPath: /etc/octavia/certs/client.pem
                  subPath: cert_all
              volumes:
                - name: octavia-certs
                  secret:
                    secretName: octavia-certs
                    defaultMode: 0644
          octavia_housekeeping:
            octavia_housekeeping:
              volumeMounts:
                - name: octavia-certs
                  mountPath: /etc/octavia/certs/private/cakey.pem
                  subPath: key
                - name: octavia-certs
                  mountPath: /etc/octavia/certs/ca_01.pem
                  subPath: cert
                - name: octavia-certs
                  mountPath: /etc/octavia/certs/client.pem
                  subPath: cert_all
              volumes:
                - name: octavia-certs
                  secret:
                    secretName: octavia-certs
                    defaultMode: 0644
          octavia_health_manager:
            octavia_health_manager:
              volumeMounts:
                - name: octavia-certs
                  mountPath: /etc/octavia/certs/private/cakey.pem
                  subPath: key
                - name: octavia-certs
                  mountPath: /etc/octavia/certs/ca_01.pem
                  subPath: cert
                - name: octavia-certs
                  mountPath: /etc/octavia/certs/client.pem
                  subPath: cert_all
              volumes:
                - name: octavia-certs
                  secret:
                    secretName: octavia-certs
                    defaultMode: 0644
      # NOTE(vsaienko): openstack-gateway label is mandatory, target
      # workers to openstack-gateway nodes to ensure create resources
      # job picks correct nodes to create lb ports.
      labels:
        worker:
          node_selector_key: openstack-gateway
          node_selector_value: enabled
        health_manager:
          node_affinity: false
          node_selector_key: openstack-gateway
          node_selector_value: enabled
        housekeeping:
          node_selector_key: openstack-gateway
          node_selector_value: enabled
      manifests:
        network_policy: false
        job_rabbit_init: false
        secret_amphora_ssh_key: true
        secret_octavia_certs: false
        secret_ca_bundle: true
{%- if spec.openstack_version not in ['queens', 'rocky'] and tungstenfabric_enabled %}
        octavia_driver_agent: true
{%- endif %}
{%- if 'amphorav2' in provider_map.keys() %}
        job_db_sync_persistence: true
{%- endif %}
{%- if ovn_enabled %}
        octavia_driver_agent: true
{%- endif %}
      network:
      {%- if ovn_enabled %}
        backend:
          - ovn
      {%- endif %}
      {%- if tungstenfabric_enabled %}
        core_plugin: tungstenfabric
        {%- if spec.get('features', {}).get('neutron', {}).get('tunnel_interface') %}
        interface:
          tunnel: {{ spec.features.neutron.tunnel_interface }}
        {%- endif %}
      {%- endif %}
        proxy:
{% include 'base/_proxy_vars.yaml' %}
      conf:
        policy.d:
          01-controller-default.yaml: {{ service_policy }}
          02-custom.yaml: {{ spec.get("features", {}).get("policies", {}).get("octavia", {}) }}
        octavia:
{% set _default_provider_driver = 'amphorav2' %}
{%- if spec.openstack_version in ['queens'] %}
  {% set _default_provider_driver = 'octavia' %}
{%- elif spec.openstack_version in ['rocky', 'stein', 'train', 'ussuri'] %}
  {% set _default_provider_driver = 'amphora' %}
{%- endif %}
{%- if ovn_enabled %}
  {% set _default_provider_driver = 'ovn' %}
          driver_agent:
            enabled_provider_agents: ovn
{%- endif %}
{%- if tungstenfabric_enabled %}
  {% set default_provider_driver = spec.features.get('octavia', {}).get('default_provider', 'tungstenfabric') %}
  {% set _default_provider_driver = 'tungstenfabric' %}
  {% set provider_map = {'tungstenfabric': 'tungstenfabric:TungstenFabricProviderDriver',
                         'amphorav2': 'amphorav2:Extented Octavia Amphora driver with jobboard support.'} %}
          apiserver:
            api_server_ip: tf-config-api.tf.svc.cluster.local
            api_server_port: 8082
{%- endif %}
{%- if 'tungstenfabric' in provider_map.keys() and default_provider_driver == 'tungstenfabric' %}
          driver_agent:
              enabled_provider_agents: tungstenfabric-agent
              max_process_warning_percent: 0.75
              provider_agent_shutdown_timeout: 60
              stats_max_processes: 50
              stats_request_timeout: 5
              status_max_processes: 50
              status_request_timeout: 5
{%- endif %}
          audit:
            enabled: true
            # TODO: remove GET when issue with probes PRODX-25190 is fixed
            ignore_req_list: GET, HEAD
          api_settings:
            default_provider_driver: {{ spec.features.get('octavia', {}).get('default_provider', _default_provider_driver) }}
            enabled_provider_drivers: {{ ','.join(provider_map.values()) }}
{%- if 'amphorav2' in provider_map.keys() %}
          task_flow:
            jobboard_enabled: true
            jobboard_backend_hosts: rfs-openstack-redis.{{ redis_namespace }}
            jobboard_backend_port: 26379
            jobboard_backend_password: {{ redis_secret }}
            jobboard_redis_sentinel: 'mymaster'
            jobboard_expiration_time: 90
{%- endif %}
          keystone_authtoken:
            memcache_security_strategy: ENCRYPT
            memcache_secret_key: {{ credentials.memcached }}
            {%- if spec.openstack_version not in ("queens", "rocky", "stein") %}
            service_type: load-balancer
            {%- endif %}
          service_auth:
            memcache_security_strategy: ENCRYPT
            memcache_secret_key: {{ credentials.memcached }}
          certificates:
            endpoint_type: internalURL
          haproxy_amphora:
            connection_max_retries: 500
          glance:
            endpoint_type: internalURL
          neutron:
            endpoint_type: internalURL
            connect_retries: 10
          nova:
            endpoint_type: internalURL
{%- if cadf_audit.enabled %}
          audit_middleware_notifications:
            driver: {{ cadf_audit_driver }}
{%- else %}
          audit_middleware_notifications:
            driver: noop
{%- endif %}
          oslo_messaging_notifications:
            topics: {{ notification_topics|join(',') }}
        logging:
          logger_octavia:
            level: {{ spec.get('features', {}).get('logging', {}).get('octavia', {}).get('level', 'INFO') }}
      secrets:
        amphora_ssh_key:
          private: {{ ssh_credentials.private| encode | b64encode | decode }}
          public: {{ ssh_credentials.public | encode | b64encode | decode }}
      endpoints:
        cluster_domain_suffix: {{ spec.internal_domain_name }}
{% include 'base/_admin_identity.yaml' %}
{% include 'base/_cache.yaml' %}
        oslo_db:
          auth:
            admin:
              username: {{ admin_creds.database.username }}
              password: {{ admin_creds.database.password }}
            octavia:
              username: {{ credentials.database.user.username }}
              password: {{ credentials.database.user.password }}
        oslo_db_persistence:
          auth:
            admin:
              username: {{ admin_creds.database.username }}
              password: {{ admin_creds.database.password }}
            octavia:
              username: {{ credentials.database.user.username }}
              password: {{ credentials.database.user.password }}
{%- if 'load-balancer' in components_with_dedicated_messaging %}
{% include 'base/_messaging_dedicated.yaml' %}
{%- else %}
{% include 'base/_messaging_shared.yaml' %}
{%- endif %}
{% include 'base/_notifications.yaml' %}
        load_balancer:
          host_fqdn_override:
            public:
              host: octavia.{{ spec.public_domain_name }}
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, first=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, first=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, first=True) }}
          hosts:
            admin:
              host: octavia-api
            default: octavia
            internal: octavia-api
            public:
              host: octavia
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, first=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, first=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, first=True) }}
          port:
            api:
              admin: 9876
              default: 80
              internal: 9876
              public: 443
          scheme:
            default: http
            public: https
      jobs:
        create_resources:
          restartPolicy: Never
{% include 'base/_ks_jobs.yaml' %}
{%- endif %}
