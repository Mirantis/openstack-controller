#apiVersion: lcm.mirantis.com/v1alpha1
#kind: HelmBundle

{%- set service = 'manila' %}
{%- set components_with_dedicated_messaging = spec.get('features', {}).get('messaging', {}).get('components_with_dedicated_messaging', []) %}
{%- set stacklight_enabled = spec.get('features', {}).get('stacklight', {}).get('enabled', False) %}
{%- set notification_topics = ['notifications'] %}
{%- do notification_topics.append('stacklight_notifications') if stacklight_enabled %}
{%- set external_notifications_enabled = spec.get('features', {}).get('messaging', {}).get('notifications', {}).get('external', {}).get('enabled', False) %}
{%- if external_notifications_enabled %}
  {%- for topic in spec.get('features', {}).get('messaging', {}).get('notifications', {}).get('external', {}).get('topics', []) %}
    {%- do notification_topics.append(topic) %}
  {%- endfor %}
{%- endif  %}
{%- set overrides = namespace(enabled=false) %}
{%- for label, node_features in spec.get("nodes", {}).items() %}
  {%- if "manila" in node_features.get("features", {}).keys() %}
    {% set overrides.enabled = true %}
  {%- endif  %}
  {%- if node_features.get("features", {}) %}
    {%- do node_specific.update({label: node_features.features}) %}
  {%- endif %}
{%- endfor %}
{%- set manila_db_cleanup = spec.get('features', {}).get('database', {}).get('cleanup', {}).get('manila', {'enabled': true}) %}
{%- set cadf_audit = spec.get('features', {}).get('logging', {}).get('cadf', {'enabled': false}) %}
{%- set cadf_audit_driver = spec.get('features', {}).get('logging', {}).get('cadf', {}).get('driver', 'messagingv2') %}

spec:
  releases:
{%- if 'shared-file-system' in components_with_dedicated_messaging %}
  - name: openstack-manila-rabbitmq
    chart: {{spec.common.infra.repo}}/rabbitmq
    values:
{% include 'base/_rabbitmq_images.yaml' %}
  {%- if stacklight_enabled %}
      monitoring:
        prometheus:
          enabled: true
  {%- endif %}
      pod:
        replicas:
          server: 1
      manifests:
        network_policy: false
        job_users_create: true
      volume:
        enabled: false
      endpoints:
        cluster_domain_suffix: {{ spec.internal_domain_name }}
{% include 'base/_messaging_dedicated.yaml' %}
      conf:
        users:
          manila:
            auth:
              service_user:
                username: {{ credentials.messaging.user.username }}
                password: {{ credentials.messaging.user.password }}
            path: /manila
        aux_conf:
          policies:
          - vhost: manila
            name: default-policy
            pattern: '^(?!amq\.).*'
            definition:
              message-ttl: 120000
          - vhost: manila
            name: results_expire
            pattern: '^results\.'
            definition:
              expires: 3600000
            priority: 1
          - vhost: manila
            name: tasks_expire
            pattern: '^tasks\.'
            definition:
              expires: 3600000
            priority: 1
  {%- if stacklight_enabled %}
        prometheus_exporter:
          rabbit_exporters: "overview,exchange,node"
  {%- endif %}
{%- endif %}
  - name: openstack-manila
    chart: {{spec.common.openstack.repo}}/manila
    values:
      images:
        tags:
{%- for image in [
    "bootstrap",
    "db_init",
    "db_drop",
    "dep_check",
    "image_repo_sync",
    "ks_endpoints",
    "ks_service",
    "ks_user",
    "manila_api",
    "manila_db_sync",
    "manila_scheduler",
    "manila_share",
    "manila_share_daemonset",
    "manila-uuids-init",
    "manila_db_purge",
    "test",] %}
        {%- if image in images %}
          {{ image }}: {{ images[image] }}
        {%- endif %}
{%- endfor %}
      endpoints:
        cluster_domain_suffix: {{ spec.internal_domain_name }}
{% include 'base/_admin_identity.yaml' %}
{%- if 'shared-file-system' in components_with_dedicated_messaging %}
{% include 'base/_messaging_dedicated.yaml' %}
{%- else %}
{% include 'base/_messaging_shared.yaml' %}
{%- endif %}
{% include 'base/_notifications.yaml' %}
        oslo_db:
          auth:
            admin:
              username: {{ admin_creds.database.username }}
              password: {{ admin_creds.database.password }}
            manila:
              username: {{ credentials.database.user.username }}
              password: {{ credentials.database.user.password }}
        sharev2:
          host_fqdn_override:
            public:
              host: manila.{{ spec.public_domain_name }}
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, first=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, first=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, first=True) }}
          hosts:
            admin:
              host: manila-api
            default: manila
            internal: manila-api
            public:
              host: manila
              tls:
                ca: |
{{ spec.features.ssl.public_endpoints.ca_cert | indent( width=18, first=True) }}
                crt: |
{{ spec.features.ssl.public_endpoints.api_cert | indent( width=18, first=True) }}
                key: |
{{ spec.features.ssl.public_endpoints.api_key | indent( width=18, first=True) }}
          port:
            api:
              admin: 8786
              default: 80
              internal: 8786
              public: 443
          scheme:
            default: http
            public: https
      conf:
        policy.d:
          01-controller-default.yaml: {{ service_policy }}
          02-custom.yaml: {{ spec.get("features", {}).get("policies", {}).get("manila", {}) }}
        manila:
{%- if cadf_audit.enabled %}
          audit_middleware_notifications:
            driver: {{ cadf_audit_driver }}
{%- else %}
          audit_middleware_notifications:
            driver: noop
{%- endif %}
          oslo_messaging_notifications:
            topics: {{ notification_topics|join(',') }}
        {%- if overrides.enabled %}
        standalone_backends:
          daemonset:
            conf:
              DEFAULT:
                cluster: ""
        {%- endif %}
        aux_conf:
          policies:
          - definition:
              message-ttl: 120000
              expires: 600000
            name: default-policy
            pattern: ^(?!amq\.).*
            vhost: manila
          - definition:
              expires: 600000
            name: results_expire
            pattern: ^results\.
            priority: 1
            vhost: manila
          - definition:
              expires: 600000
            name: tasks_expire
            pattern: ^tasks\.
            priority: 1
            vhost: manila
  {%- if stacklight_enabled %}
        prometheus_exporter:
          rabbit_exporters: "overview,exchange,node"
  {%- endif %}
        standalone_backends:
          daemonset:
            conf:
              generic:
                driver_handles_share_servers: True
                share_backend_name: GENERIC
                share_driver: manila.share.drivers.generic.GenericShareDriver
                service_image_name: manila-service-image
                service_instance_user: manila
                interface_driver: manila.network.linux.interface.OVSInterfaceDriver
                service_network_name: fs-mgmt-net
                service_network_cidr: 10.254.0.0/16
                path_to_public_key: /etc/manila/ssh/manila.pub
                path_to_private_key: /etc/manila/ssh/manila
              DEFAULT:
                enabled_share_backends: generic
        logging:
          logger_manila:
            level: {{ spec.get('features', {}).get('logging', {}).get('manila', {}).get('level', 'INFO') }}
      jobs:
{% include 'base/_ks_jobs.yaml' %}
{%- if manila_db_cleanup.enabled %}
        db_purge:
          enabled: {{ manila_db_cleanup.enabled }}
          cron: {{ manila_db_cleanup.get("schedule", "1 7 * * 1") }}
          script:
            config:
              age: {{ manila_db_cleanup.get("age", 30) }}
{%- endif %}
      dependencies:
        static:
          db_init:
            jobs:
              - openstack-mariadb-cluster-wait
      secrets:
        service_instance_ssh_key:
          private: |
            {{ ssh_credentials.private|indent(12)|trim }}
          public: |
            {{ ssh_credentials.public }}
      manifests:
        secret_ca_bundle: true
        cron_job_db_purge: {{ manila_db_cleanup.enabled }}
        daemonset_share: true
        service_instance_ssh_key: true
