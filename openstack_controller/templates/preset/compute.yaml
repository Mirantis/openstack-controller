# IMPORTANT: list items specified here is not possible to override as they
# appended during merging
{%- set ironic_enabled = 'baremetal' in services %}
{%- set nginx_ingress_namespace_class = "openstack-ingress-nginx" %}
internal_domain_name: cluster.local
common:
  charts:
    releases:
      namespace: {{ openstack_namespace }}
  openstack:
    values:
      network:
        api:
          ingress:
            classes:
              namespace: {{ nginx_ingress_namespace_class }}
features:
  services:
    - block-storage
    - compute
    - dns
    - identity
    - dashboard
    - image
    - ingress
    - database
    - memcached
    - networking
    - orchestration
    - messaging
    - load-balancer
{%- if openstack_version not in ['queens', 'rocky'] %}
    - placement
{%- endif %}
    - coordination
    - key-manager
    - redis
  glance:
    backend: ceph
  cinder:
    volume:
      backend: ceph
    backup:
      backend: ceph
  neutron:
    backend: ml2
  database:
    local_volumes:
      enabled: true
  ssl:
    public_endpoints:
      enabled: true
  stacklight:
    enabled: true
    user:
      username: stacklight
services:
  image:
    glance:
      values:
        conf:
          enable_iscsi: true
  ingress:
    ingress:
      values:
        deployment:
          # NOTE(vsaienko): deploy in cluster mode to allow handle ingress'es
          # from TF namespace
          mode: "cluster"
          cluster:
            class: {{ nginx_ingress_namespace_class }}
  database:
    mariadb:
      values:
        conf:
          database_conf:
            mysqld:
              wsrep_provider_options:
                gcache.size: 1024M
  dashboard:
    horizon:
      values:
        network:
          dashboard:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
  networking:
    neutron:
      values:
        network:
          server:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
  orchestration:
    heat:
      values:
        network:
          cfn:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
          cloudwatch:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
  compute:
    nova:
      values:
        conf:
          {%- if openstack_version not in ['queens', 'rocky', 'stein', 'train'] %}
          policy:
            os_compute_api:limits: "@"
            os_compute_api:limits:other_project: rule:system_reader_api
            os_compute_api:os-agents:create: rule:system_admin_api
            os_compute_api:os-agents:delete: rule:system_admin_api
            os_compute_api:os-agents:list: rule:system_reader_api
            os_compute_api:os-agents:update: rule:system_admin_api
            os_compute_api:os-attach-interfaces:create: rule:system_admin_or_owner
            os_compute_api:os-attach-interfaces:delete: rule:system_admin_or_owner
            os_compute_api:os-attach-interfaces:list: rule:system_or_project_reader
            os_compute_api:os-attach-interfaces:show: rule:system_or_project_reader
            os_compute_api:os-availability-zone:list: "@"
            os_compute_api:os-deferred-delete:force: rule:system_admin_or_owner
            os_compute_api:os-deferred-delete:restore: rule:system_admin_or_owner
            os_compute_api:os-hypervisors:list: rule:system_reader_api
            os_compute_api:os-hypervisors:list-detail: rule:system_reader_api
            os_compute_api:os-hypervisors:search: rule:system_reader_api
            os_compute_api:os-hypervisors:servers: rule:system_reader_api
            os_compute_api:os-hypervisors:show: rule:system_reader_api
            os_compute_api:os-hypervisors:statistics: rule:system_reader_api
            os_compute_api:os-hypervisors:uptime: rule:system_reader_api
            os_compute_api:os-instance-actions:list: rule:system_or_project_reader
            os_compute_api:os-instance-actions:show: rule:system_or_project_reader
            os_compute_api:os-instance-usage-audit-log:list: rule:system_reader_api
            os_compute_api:os-instance-usage-audit-log:show: rule:system_reader_api
            os_compute_api:os-security-groups:add: rule:system_admin_or_owner
            os_compute_api:os-security-groups:list: rule:system_or_project_reader
            os_compute_api:os-security-groups:remove: rule:system_admin_or_owner
            os_compute_api:os-server-password:clear: rule:system_admin_or_owner
            os_compute_api:os-server-password:show: rule:system_or_project_reader
            os_compute_api:os-services:delete: rule:system_admin_api
            os_compute_api:os-services:list: rule:system_reader_api
            os_compute_api:os-services:update: rule:system_admin_api
            os_compute_api:os-unrescue: rule:system_admin_or_owner
            {%- if openstack_version not in ['ussuri'] %}
            os_compute_api:extensions: '@'
            os_compute_api:os-floating-ip-pools: '@'
            {%- endif %}
          {%- endif %}
          nova:
            filter_scheduler:
              enabled_filters:
              - AvailabilityZoneFilter
              - ComputeFilter
              - ComputeCapabilitiesFilter
              - ImagePropertiesFilter
              - ServerGroupAntiAffinityFilter
              - ServerGroupAffinityFilter
              - NUMATopologyFilter
              - PciPassthroughFilter
            libvirt:
              live_migration_use_ip_to_scp_configdrive: true
          enable_iscsi: true
        network:
          api:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
          metadata:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
          osapi:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
          placement:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
          novncproxy:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
        bootstrap:
          structured:
            flavors:
              options:
                m1.extra_tiny_test:
                  disk: 5
                  name: m1.extra_tiny_test
                  ram: 256
                  vcpus: 1
                m1.tiny_test:
                  disk: 5
                  name: m1.tiny_test
                  ram: 512
                  vcpus: 1
  block-storage:
    cinder:
      values:
        pod:
          security_context:
            cinder_volume:
              # NOTE(vsaienko): run volume and backup with same user
              # to allow collocate ceph based volume with backups and avoid issues
              # with /var/lib/cinder shared state directory
              pod:
                runAsUser: 42424
              container:
                # NOTE(ogrudev): set container to privileged mode for bidirectional mounts
                # needed by "enable_iscsi: true" option
                cinder_volume:
                  privileged: true
            cinder_backup:
              pod:
                runAsUser: 42424
              container:
                cinder_backup:
                  runAsUser: 42424
                  privileged: true
        conf:
          enable_iscsi: true
  metric:
    gnocchi:
      values:
        network:
          api:
            ingress:
              classes:
                namespace: {{ nginx_ingress_namespace_class }}
  tempest:
    tempest:
      values:
        conf:
          # NOTE(vsaienko): disable cleanup explicitly to avoid production data loss.
          # DANGER: do not enable this on production environment.
          cleanup:
            enabled: False
          convert_to_uuid:
            network:
              public_network_id: public
            compute:
              image_ref: Cirros-5.1
              image_ref_alt: Cirros-5.1
            {%- if ironic_enabled %}
              # TODO(vsaienko): change name to more generic
              flavor_ref:  baremetal-ram1024-cpus2-disk10
              flavor_ref_alt: baremetal-ram1024-cpus2-disk10
            {%- else %}
              flavor_ref:  m1.extra_tiny_test
              flavor_ref_alt: m1.tiny_test
            {%- endif %}
          blacklist:
            - (?:tempest\.fake\.test)
            # Skip neutron tempest plugin tests that are already contains in tempest
            - (?:neutron_tempest_plugin.api.admin.test_agent_management)
            - (?:neutron_tempest_plugin.api.admin.test_dhcp_agent_scheduler.DHCPAgentSchedulersTestJSON.test_add_remove_network_from_dhcp_agent)
            - (?:neutron_tempest_plugin.api.admin.test_dhcp_agent_scheduler.DHCPAgentSchedulersTestJSON.test_list_dhcp_agent_hosting_network)
            - (?:neutron_tempest_plugin.api.admin.test_dhcp_agent_scheduler.DHCPAgentSchedulersTestJSON.test_list_networks_hosted_by_one_dhcp)
            - (?:neutron_tempest_plugin.api.admin.test_quotas.QuotasTest.test_quotas)
            - (?:neutron_tempest_plugin.api.admin.test_routers_dvr)
            - (?:neutron_tempest_plugin.api.test_dhcp_ipv6)
            - (?:neutron_tempest_plugin.api.test_metering_extensions)
            - (?:neutron_tempest_plugin.api.test_networks.NetworksTestJSON.test_show_network)
            - (?:neutron_tempest_plugin.api.test_security_groups.SecGroupTest.test_create_list_update_show_delete_security_group)
            - (?:neutron_tempest_plugin.api.test_service_type_management.ServiceTypeManagementTest.test_service_provider_list)
            - (?:neutron_tempest_plugin.api.test_flavors_extensions.TestFlavorsIpV6TestJSON.test_list_service_profiles)
            - (?:neutron_tempest_plugin.api.test_flavors_extensions.TestFlavorsJson.test_list_service_profiles)
            - (?:neutron_tempest_plugin.api.test_flavors_extensions.TestFlavorsIpV6TestJSON.test_show_service_profile)
            - (?:neutron_tempest_plugin.api.test_flavors_extensions.TestFlavorsJson.test_show_service_profile)
            - (?:neutron_tempest_plugin.api.test_routers)
            - (?:neutron_tempest_plugin.api.test_allowed_address_pair.AllowedAddressPairIpV6TestJSON)
            - (?:neutron_tempest_plugin.api.test_allowed_address_pair.AllowedAddressPairTestJSON)
            - (?:neutron_tempest_plugin.api.test_extra_dhcp_options.ExtraDHCPOptionsIpV6TestJSON)
            - (?:neutron_tempest_plugin.api.test_extra_dhcp_options.ExtraDHCPOptionsTestJSON)
            # test_ipv6_vip_mixed_ipv4_ipv6_members_traffic test is added to the list because the test requires IPv4 IPv6 dual stack mode in
            # Kubernetes but the modes is supported from 1.16 version of Kubernetes. The test will be removed from the list once Kubernetes server
            # will be at or later than version v1.16. The bug is described more comprehensively in PRODX-2330
            - (?:octavia_tempest_plugin.tests.scenario.v2.test_ipv6_traffic_ops.IPv6TrafficOperationsScenarioTest)
            # These tests require four pre-created compute availability zones in a cluster
            - (?:octavia_tempest_plugin.tests.api.v2.test_availability_zone)
            - (?:octavia_tempest_plugin.tests.api.v2.test_availability_zone_profile)
            # Skip SoftwareConfigIntegrationTest because it requires a custom image
            # https://github.com/openstack/heat/blob/stable/train/heat_integrationtests/prepare_test_env.sh
            - (?:heat_tempest_plugin.tests.scenario.test_server_software_config.SoftwareConfigIntegrationTest)
            # Skip patrole tempest plugin tests until PRODX-5954 will be resolved
            - (?:patrole_tempest_plugin)
          {%- if ironic_enabled %}
            # Skip schedule to all nodes, as in case of concurrent tests, this will highly likely to fail
            - (?:tempest.scenario.test_server_multinode.TestServerMultinode.test_schedule_to_all_nodes)
            # Skip ironic boot from volume
            - (?:ironic_tempest_plugin.tests.scenario.test_baremetal_boot_from_volume.BaremetalBFV.test_baremetal_boot_from_volume)
          {%- endif %}
            # The test below is skipped while upstream bug (https://bugs.launchpad.net/tempest/+bug/1317133) is not fixed.
            - (?:tempest.api.object_storage.test_container_sync_middleware.ContainerSyncMiddlewareTest.test_container_synchronization)
            # Do not run test that plays plugs real computes to agregates on the fly, dengerous for production PRODX-14770
            - (?:tempest.scenario.test_aggregates_basic_ops.TestAggregatesBasicOps.test_aggregate_basic_ops)
            # Skip bgpvpn tempest tests until PRODX-14720 will be resolved
            - (?:neutron_tempest_plugin.bgpvpn.scenario.test_bgpvpn_basic.TestBGPVPNBasic.test_bgpvpn_negative_delete_bgpvpn)
            - (?:neutron_tempest_plugin.bgpvpn.scenario.test_bgpvpn_basic.TestBGPVPNBasic.test_bgpvpn_negative_delete_net_association)
            - (?:neutron_tempest_plugin.bgpvpn.scenario.test_bgpvpn_basic.TestBGPVPNBasic.test_bgpvpn_negative_delete_router_association)
            - (?:neutron_tempest_plugin.bgpvpn.scenario.test_bgpvpn_basic.TestBGPVPNBasic.test_bgpvpn_port_association_local_pref)
          {%- if openstack_version in ['queens', 'rocky', 'stein', 'train', 'ussuri'] %}
            # Skip because of PRODX-9184 has won't fix resolution. Should be executed only for victoria and upper environments.
            - (?:octavia_tempest_plugin.tests.scenario.v2.test_traffic_ops.TrafficOperationsScenarioTest.test_basic_traffic)
          {%- endif %}
          {%- if signature_enabled %}
            # Skip TEST failed, that doesn't work with static accounts correctly
            # TODO(vsaienko): remove when PRODX-18761 is fixed
            - (?:tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_shelve_unshelve_server)
            - (?:tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_shelve_shelved_server)
            - (?:tempest.scenario.test_shelve_instance.TestShelveInstance.test_shelve_instance)
            # TODO(vsaienko): remove when PRODX-18763 is fixed
            - (?:neutron_tempest_plugin.api.admin.test_networks.NetworksTestAdmin.test_create_network_with_project)
            - (?:neutron_tempest_plugin.api.admin.test_networks.NetworksTestAdmin.test_create_network_with_project_and_tenant)
            - (?:neutron_tempest_plugin.api.test_security_groups.SecGroupQuotaTest.test_create_sg_when_quota_disabled)
            - (?:neutron_tempest_plugin.api.test_security_groups.SecGroupRulesQuotaTest.test_create_sg_rules_when_quota_disabled)
            - (?:neutron_tempest_plugin.api.test_security_groups.SecGroupTest.test_list_security_group_rules_contains_all_rules)
            - (?:neutron_tempest_plugin.api.test_security_groups_negative.NegativeSecGroupQuotaTest.test_create_excess_sg)
            - (?:neutron_tempest_plugin.api.test_security_groups_negative.NegativeSecGroupRulesQuotaTest.test_sg_creation_with_insufficient_sg_rules_quota)
          {%- endif %}
          script: |
            tempest run --config-file /etc/tempest/tempest.conf -w 4 --smoke --blacklist-file  /etc/tempest/test-blacklist
          tempest:
          {%- if ironic_enabled and not ironic_mt_enabled %}
            auth:
              create_isolated_networks: false
          {%- endif %}
            heat_plugin:
              image_ref: Fedora-27-1.6
              instance_type: m1.tiny_test
              minimal_image_ref: Cirros-5.1
              minimal_instance_type: m1.extra_tiny_test
            identity:
              ca_certificates_file: /certs/ca-bundle.pem
            volume:
              build_timeout: 600
            {%- if ironic_enabled %}
            baremetal:
              active_timeout: 2700
              adjusted_root_disk_size_gb: 4
              available_nodes: 2
              boot_mode: bios
              default_rescue_interface: ''
              deploywait_timeout: 2700
              driver: fake-hardware
              power_timeout: 2700
              rescue_timeout: 2700
              unprovision_timeout: 2700
              unrescue_timeout: 2700
            baremetal_feature_enabled:
              adoption: true
            {%- endif %}
            #TODO(mshalamov): Will be removed during process of completing PRODX-1192
            compute:
            {%- if ironic_enabled and not ironic_mt_enabled %}
              fixed_network_name: ironic-provisioning
            {%- endif %}
              build_timeout: 600
            image:
              build_timeout: 600
            load_balancer:
              lb_build_timeout: 1500
              build_timeout: 600
            validation:
              image_ssh_password: gocubsgo
              image_ssh_user: cirros
            {%- if ironic_enabled %}
              ssh_timeout: 420
              connect_timeout: 90
            {%- endif %}
            network:
            {%- if ironic_enabled and not ironic_mt_enabled %}
              shared_physical_network: true
            {%- else %}
              shared_physical_network: false
            {%- endif %}
              floating_network_name: public
            volume-feature-enabled:
              api_v1: false
              api_v2: false
              api_v3: true
              cluster_active_active: true
            telemetry:
              disable_ssl_certificate_validation: true
            image-feature-enabled:
              enabled_import_methods: 'web-download,glance-direct,copy-image'
            service-clients:
              http_timeout: 120
          tempest_logging:
              handler_file:
                args: ('/var/lib/tempest/data/tempest.log',)
                class: FileHandler
                formatter: tests
                level: DEBUG
              handler_stdout:
                level: WARN
              handlers:
                keys: file,stdout
              logger_root:
                handlers: stdout,file
                level: DEBUG
              logger_tempest:
                handlers: stdout,file
                level: DEBUG

        manifests:
          job_bootstrap: true
  key-manager:
    barbican:
      values:
        conf:
          policy:
          {%- if openstack_version not in ['queens', 'rocky'] %}
            # TODO(vsaienko): drop policy settings in upstream values.yaml to ensure in-code policy
            # defaults are used.
            secret_project_match: project_id:%(target.secret.project_id)s
            secret_creator_user: user_id:%(target.secret.creator_id)s
            container_project_match: project_id:%(target.container.project_id)s
            container_creator_user: user_id:%(target.container.creator_id)s
          {%- else %}
            secret_project_match: project:%(target.secret.project_id)s
            secret_creator_user: user:%(target.secret.creator_id)s
            container_project_match: project:%(target.container.project_id)s
            container_creator_user: user:%(target.container.creator_id)s
          {%- endif %}
