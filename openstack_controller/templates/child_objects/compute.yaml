{%- from 'macros/connections.j2' import to_child_object %}
libvirt:
  DaemonSet:
    libvirt:
      hash_fields: []
      images:
      - libvirt
      - ceph_config_helper
      manifest: daemonset_libvirt
      pod_labels:
        application: libvirt
        component: libvirt
      type: dynamic
nova:
  CronJob:
    nova-cell-setup:
      hash_fields: []
      images:
      - nova_cell_setup
      manifest: cron_job_cell_setup
      pod_labels:
        application: nova
        component: cell-setup
    nova-db-purge:
      hash_fields: []
      images:
      - nova_db_purge
      manifest: cron_job_db_purge
      pod_labels:
        application: nova
        component: db-purge
    nova-service-cleaner:
      hash_fields: []
      images:
      - nova_service_cleaner
      manifest: cron_job_service_cleaner
      pod_labels:
        application: nova
        component: service-cleaner
  DaemonSet:
    nova-compute:
      hash_fields: []
      images:
      - nova_compute
      - nova_compute_ssh
      manifest: daemonset_compute
      pod_labels:
        application: nova
        component: compute
      type: dynamic
      connections:
        egress:
          - {{ to_child_object("coordination", "etcd", "StatefulSet", "etcd-etcd", ["client"]) | indent(12)}}
          - {{ to_child_object("compute", "rabbitmq", "StatefulSet", "openstack-nova-rabbitmq-rabbitmq", ["amqp"]) | indent(12)}}
  Deployment:
    nova-api-metadata:
      hash_fields: []
      images:
      - nova_api
      manifest: deployment_api_metadata
      pod_labels:
        application: nova
        component: metadata
      connections:
        egress:
          - {{ to_child_object("coordination", "etcd", "StatefulSet", "etcd-etcd", ["client"]) | indent(12)}}
          - {{ to_child_object("compute", "rabbitmq", "StatefulSet", "openstack-nova-rabbitmq-rabbitmq", ["amqp"]) | indent(12)}}
    nova-api-osapi:
      hash_fields: []
      images:
      - nova_api
      manifest: deployment_api_osapi
      pod_labels:
        application: nova
        component: os-api
      connections:
        egress:
          - {{ to_child_object("coordination", "etcd", "StatefulSet", "etcd-etcd", ["client"]) | indent(12)}}
          - {{ to_child_object("compute", "rabbitmq", "StatefulSet", "openstack-nova-rabbitmq-rabbitmq", ["amqp"]) | indent(12)}}
    nova-conductor:
      hash_fields: []
      images:
      - nova_conductor
      manifest: deployment_conductor
      pod_labels:
        application: nova
        component: conductor
      connections:
        egress:
          - {{ to_child_object("coordination", "etcd", "StatefulSet", "etcd-etcd", ["client"]) | indent(12)}}
          - {{ to_child_object("compute", "rabbitmq", "StatefulSet", "openstack-nova-rabbitmq-rabbitmq", ["amqp"]) | indent(12)}}
    nova-consoleauth:
      hash_fields: []
      images:
      - nova_consoleauth
      manifest: deployment_consoleauth
      pod_labels:
        application: nova
        component: consoleauth
      connections:
        egress:
          - {{ to_child_object("coordination", "etcd", "StatefulSet", "etcd-etcd", ["client"]) | indent(12)}}
          - {{ to_child_object("compute", "rabbitmq", "StatefulSet", "openstack-nova-rabbitmq-rabbitmq", ["amqp"]) | indent(12)}}
    nova-novncproxy:
      hash_fields: []
      images:
      - nova_novncproxy_assets
      - nova_novncproxy
      manifest: deployment_novncproxy
      pod_labels:
        application: nova
        component: novnc-proxy
      connections:
        egress:
          - {{ to_child_object("coordination", "etcd", "StatefulSet", "etcd-etcd", ["client"]) | indent(12)}}
          - {{ to_child_object("compute", "rabbitmq", "StatefulSet", "openstack-nova-rabbitmq-rabbitmq", ["amqp"]) | indent(12)}}
{%- if spec.openstack_version not in ['queens', 'rocky', 'stein'] %}
    nova-placement-api:
      hash_fields: []
      images:
      - nova_placement
      manifest: deployment_placement
      pod_labels:
        application: nova
        component: placement
      connections:
        egress:
          - {{ to_child_object("coordination", "etcd", "StatefulSet", "etcd-etcd", ["client"]) | indent(12)}}
{%- endif %}
    nova-scheduler:
      hash_fields: []
      images:
      - nova_scheduler
      manifest: deployment_scheduler
      pod_labels:
        application: nova
        component: scheduler
      connections:
        egress:
          - {{ to_child_object("coordination", "etcd", "StatefulSet", "etcd-etcd", ["client"]) | indent(12)}}
          - {{ to_child_object("compute", "rabbitmq", "StatefulSet", "openstack-nova-rabbitmq-rabbitmq", ["amqp"]) | indent(12)}}
  Job:
    nova-bootstrap:
      hash_fields:
      - network.proxy.*
      - bootstrap.*
      images:
      - bootstrap
      manifest: job_bootstrap
      pod_labels:
        application: nova
        component: bootstrap
    nova-cell-setup:
      hash_fields: []
      images:
      - nova_cell_setup
      - nova_cell_setup_init
      manifest: job_cell_setup
      pod_labels:
        application: nova
        component: cell-setup
    nova-db-drop:
      hash_fields:
      - endpoints.oslo_db.*
      images:
      - db_drop
      manifest: job_db_drop
      pod_labels:
        application: nova
        component: db-drop
    nova-db-init:
      hash_fields:
      - endpoints.oslo_db.*
      images:
      - db_init
      manifest: job_db_init
      pod_labels:
        application: nova
        component: db-init
    nova-db-sync:
      hash_fields:
      - endpoints.oslo_db.*
      - endpoints.oslo_messaging.*
      images:
      - nova_db_sync
      manifest: job_db_sync
      pod_labels:
        application: nova
        component: db-sync
    nova-db-sync-api:
      hash_fields:
      - endpoints.oslo_db.*
      images:
      - nova_db_sync_api
      manifest: job_db_sync_api
      pod_labels:
        application: nova
        component: db-sync-api
    nova-db-sync-db:
      hash_fields:
      - endpoints.oslo_db.*
      images:
      - nova_db_sync_db
      manifest: job_db_sync_db
      pod_labels:
        application: nova
        component: db-sync-db
    nova-db-sync-online:
      hash_fields: []
      images:
      - nova_db_sync_online
      manifest: job_db_sync_online
      pod_labels:
        application: nova
        component: db-sync-online
    nova-ks-endpoints:
      hash_fields: []
      images:
      - ks_endpoints
      manifest: job_ks_endpoints
      pod_labels:
        application: nova
        component: ks-endpoints
    nova-ks-service:
      hash_fields: []
      images:
      - ks_service
      manifest: job_ks_service
      pod_labels:
        application: nova
        component: ks-service
    nova-ks-user:
      hash_fields:
      - endpoints.*
      images:
      - ks_user
      manifest: job_ks_user
      pod_labels:
        application: nova
        component: ks-user
{%- if spec.openstack_version not in ['queens', 'rocky', 'stein'] %}
    placement-ks-endpoints:
      hash_fields: []
      images:
      - ks_endpoints
      manifest: job_ks_placement_endpoints
      pod_labels:
        application: placement
        component: ks-endpoints
    placement-ks-service:
      hash_fields: []
      images:
      - ks_service
      manifest: job_ks_placement_service
      pod_labels:
        application: placement
        component: ks-service
    placement-ks-user:
      hash_fields:
      - endpoints.*
      images:
      - ks_user
      manifest: job_ks_placement_user
      pod_labels:
        application: placement
        component: ks-user
  Ingress:
    placement:
      hash_fields: []
      images: []
      manifest: ingress_placement
  Secret:
    placement-tls-public:
      hash_fields: []
      images: []
      manifest: ingress_placement
  Service:
    placement:
      hash_fields: []
      images: []
      manifest: service_ingress_placement
    placement-api:
      hash_fields: []
      images: []
      manifest: service_placement
{%- endif %}
  StatefulSet:
    nova-compute-ironic:
      hash_fields: []
      images:
      - nova_compute_ironic
      manifest: statefulset_compute_ironic
      pod_labels:
        application: nova
        component: compute
      connections:
        egress:
          - {{ to_child_object("coordination", "etcd", "StatefulSet", "etcd-etcd", ["client"]) | indent(12)}}
    nova-conductor:
      hash_fields: []
      images:
      - nova_conductor
      manifest: statefulset_conductor
      pod_labels:
        application: nova
        component: conductor
      connections:
        egress:
          - {{ to_child_object("coordination", "etcd", "StatefulSet", "etcd-etcd", ["client"]) | indent(12)}}
    nova-scheduler:
      hash_fields: []
      images:
      - nova_scheduler
      manifest: statefulset_scheduler
      pod_labels:
        application: nova
        component: scheduler
      connections:
        egress:
          - {{ to_child_object("coordination", "etcd", "StatefulSet", "etcd-etcd", ["client"]) | indent(12)}}
rabbitmq:
  StatefulSet:
    openstack-nova-rabbitmq-rabbitmq:
      images: []
      manifest: ''
      hash_fields: []
      pod_labels:
        application: rabbitmq
        component: server
        release_group: openstack-nova-rabbitmq
      ports:
      - port: 15672
        name: http
        protocol: TCP
      - port: 5672
        name: amqp
        protocol: TCP
      - port: 25672
        name: clustering
        protocol: TCP
  Job:
    openstack-nova-rabbitmq-cluster-wait:
      hash_fields:
      - endpoints.oslo_messaging.*
      images:
      - rabbitmq_scripted_test
      manifest: job_cluster_wait
