apiVersion: lcm.mirantis.com/v1alpha1
kind: OpenStackDeployment
metadata:
  name: osh-dev
  namespace: openstack
  labels: {}
  annotations: {}
spec:
  # common values to pass into all charts and services
  common:
    images:
      repo:
    # Common data among all charts
    charts:
      releases:
        values:
          endpoints:
            cluster_domain_suffix: kaas-kubernetes-3af5ae538cf411e9a6c7fa163e5a4837
    # Common data among all chart groups
    openstack:
            #      repo: osh
      version: stein
            #    infra:
            #      repo: osh-infra
  # features that would enable coordinated changes to values of several charts
  features:
    services:
     - block-storage
     - compute
     - identity
     - dashboard
     - image
     - ingress
     - mariadb
     - memcached
     - networking
     - orchestration
     - rabbitmq
    ssl:
      public_endpoints:
        enabled: False
#    messaging:
#      dedicated_rabbitmq:
#        enabled: True
    keystone:
      iam:
        enabled: True
      users:
        admin:
          username: admin
          password: workshop
    glance:
      direct_upload: False
      backend: ceph
    cinder:
      volume:
        backend: ceph
      backup:
        backend: ceph
    neutron:
      backend: ovs
    nova:
      images:
        backend: local
  # enabled services and their specific configuration
  services:
    ingress:
      ingress:
        values: {}
    memcached:
      memcached:
        values: {}
    mariadb:
      mariadb:
        values: {}
    rabbitmq:
      rabbitmq:
        values: {}
    identity:
      keystone:
        values:
          conf:
            keystone:
              DEFAULT:
               mykey: myvalue
    image:
      glance:
        values: {}
    block-storage:
      cinder:
        values: {}
    networking:
      neutron:
        values: {}
    compute:
      nova:
        values:
          bootstrap:
            structured:
              flavors:
                options:
                  m1.extra_tiny_test:
                    disk: 1
                    id: "1"
                    name: m1.extra_tiny_test
                    ram: 256
                    vcpus: 1
                  m1_tiny_test:
                    disk: 1
                    id: "2"
                    name: m1.tiny
                    ram: 512
                    vcpus: 1
    orchestration:
      heat:
        values: {}
    dashboard:
      horizon:
        values: {}
    tempest:
      tempest:
        values:
          conf:
            blacklist:
            # TODO(sandrichenko) create a bugs for each of failures/group of failures and assign to appropriate team.
            - (?:tempest\.scenario\.test_server_basic_ops\.TestServerBasicOps\.test_server_basic_ops)
            - (?:tempest\.api\.volume\.test_volumes_actions\.VolumesActionsTest)
            - (?:tempest\.api\.volume\.test_volumes_get\.VolumesGetTest\.test_volume_create_get_update_delete_from_image)
            - (?:tempest\.api\.volume\.test_volumes_get\.VolumesGetTest\.test_volume_create_get_update_delete)
            - (?:tempest\.api\.volume\.test_volumes_list\.VolumesListTestJSON)
            - (?:tempest\.api\.compute\.servers\.test_server_actions\.ServerActionsTestJSON)
            - (?:tempest\.api\.compute\.servers\.test_create_server\.ServersTestManualDisk)
            - (?:tempest\.api\.compute\.servers\.test_attach_interfaces\.AttachInterfacesUnderV243Test\.test_add_remove_fixed_ip)
            - (?:tempest\.api\.compute\.servers\.test_server_addresses\.ServerAddressesTestJSON)
            - (?:tempest\.api\.compute\.servers\.test_create_server\.ServersTestBootFromVolume)
            - (?:tempest\.api\.compute\.servers\.test_create_server\.ServersTestJSON)
            script: |
              tempest run --config-file /etc/tempest/tempest.conf -w 4 --smoke --blacklist-file  /etc/tempest/test-blacklist
